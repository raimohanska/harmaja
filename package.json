{
  "name": "harmaja",
  "version": "0.17.0",
  "main": "lonna/index.js",
  "types": "lonna/index.d.ts",
  "license": "MIT",
  "devDependencies": {
    "@types/jest": "^26.0.20",
    "babel-jest": "^26.6.3",
    "baconjs": "^3.0.17",
    "csstype": "^3.0.6",
    "jest": "^26.6.3",
    "lonna": "^0.8.2",
    "parcel-bundler": "^1.12.4",
    "prettier": "^2.2.1",
    "rxjs": "^6.6.3",
    "ts-jest": "^26.5.0",
    "typescript": "^4"
  },
  "dependencies": {},
  "peerDependencies": {},
  "engines": {
    "node": ">13.0"
  },
  "files": [
    "lonna",
    "bacon",
    "rxjs",
    "src"
  ],
  "scripts": {
    "example-content-editable": "parcel --out-dir dist/examples examples/content-editable/index.html",
    "example-first": "parcel --out-dir dist/examples examples/first/index.html",
    "example-search": "parcel --out-dir dist/examples examples/search/index.html",
    "example-todoapp": "parcel --out-dir dist/examples examples/todoapp/index.html",
    "example-todoapp-atoms": "parcel --out-dir dist/examples examples/todoapp-atoms/index.html",
    "example-todoapp-backend": "parcel --out-dir dist/examples examples/todoapp-backend/index.html",
    "example-consultants": "mkdir -p dist/examples && cp -R examples/consultants/public/* dist/examples && parcel --out-dir dist/examples examples/consultants/index.html",
    "example-side-effects": "parcel --out-dir dist/examples examples/side-effects/index.html",
    "example-todoapp-rxjs": "parcel --out-dir dist/examples examples/todoapp-rxjs/index.html",
    "example-todoapp-atoms-rxjs": "parcel --out-dir dist/examples examples/todoapp-atoms-rxjs/index.html",
    "example-list-focus": "parcel --out-dir dist/examples examples/list-focus/index.html",
    "tsc": "tsc -p tsconfig.build.json",
    "tsc:watch": "yarn tsc --watch",
    "build": "scripts/build lonna && scripts/build bacon && scripts/build rxjs",
    "test": "jest",
    "test:watch": "jest --watchAll",
    "switch": "scripts/switch-observables $1",
    "lint": "prettier --check \"**/*.{json,md,ts}\"",
    "lint:fix": "prettier --write '**/*.{json,md,ts}'"
  }
}
